# Task ID: 22
# Title: Optimize Large File Performance
# Status: pending
# Dependencies: 3, 6
# Priority: low
# Description: Profile and optimize performance for very large session files (>100MB).
# Details:
Investigate moving the JSONL parsing logic to a Web Worker to avoid blocking the main thread. Profile rendering performance of the virtualized list and optimize as needed. Target memory footprint â‰¤ 500MB on large sessions.

# Test Strategy:
Benchmark parsing and rendering performance with a very large test file before and after optimizations. Verify main thread remains responsive during parsing.

# Subtasks:
## 1. >100MB benchmark [pending]
### Dependencies: None
### Description: Create reproducible benchmark for parsing and rendering huge sessions.
### Details:


## 2. Move parsing to Web Worker [pending]
### Dependencies: 22.1
### Description: Run JSONL parsing in a worker to keep UI responsive.
### Details:


## 3. Worker messaging interface [pending]
### Dependencies: 22.2
### Description: Define message protocol for parsed items, progress, and completion/errors.
### Details:


## 4. Profile rendering bottlenecks [pending]
### Dependencies: 22.1
### Description: Use performance tools to identify slow components and re-renders.
### Details:


## 5. Memory analysis [pending]
### Dependencies: 22.1
### Description: Track allocation hotspots and ensure garbage collection of offscreen items.
### Details:


## 6. Implement optimizations [pending]
### Dependencies: 22.2, 22.3, 22.4, 22.5
### Description: Memoize heavy components and optimize data structures for access.
### Details:


## 7. Re-benchmark and compare [pending]
### Dependencies: 22.6
### Description: Run the benchmark again and compare against baseline; document wins/regressions.
### Details:


