# Task ID: 19
# Title: Implement Deep Linking
# Status: pending
# Dependencies: 11
# Priority: medium
# Description: Enable sharing links that restore the application's state, including selected event and filters.
# Details:
Use the URL hash (`#`) to store the state, such as the current filter settings and the ID of a selected event. On page load, parse the hash and restore the UI state.

# Test Strategy:
Apply a filter and select an event. Copy the URL. Open the URL in a new tab and verify the filter and event selection are restored.

# Subtasks:
## 1. Define URL hash schema [pending]
### Dependencies: None
### Description: Choose encoding for filters and selected event in the URL hash.
### Details:


## 2. Update URL on state changes [pending]
### Dependencies: 19.1
### Description: Listen to app state and serialize to URL hash without heavy churn.
### Details:


## 3. Restore state on load [pending]
### Dependencies: 19.1
### Description: On app init parse hash and rehydrate filters/selection.
### Details:


## 4. Avoid update loops [pending]
### Dependencies: 19.2, 19.3
### Description: Debounce/suppress hash writes during state hydration to prevent loops.
### Details:


## 5. Hashchange listener for state sync [pending]
### Dependencies: None
### Description: Listen to window 'hashchange' and update UI state (bookmarks-only and future params) to support back/forward navigation and manual hash edits.
### Details:


## 6. Deep link selected event + auto-scroll [pending]
### Dependencies: None
### Description: Add hash param for selected event (e.g., e=<key>) and on load/changes auto-scroll TimelineView to it and focus the corresponding EventCard.
### Details:


