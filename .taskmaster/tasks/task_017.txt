# Task ID: 17
# Title: Implement Session Library with IndexedDB
# Status: pending
# Dependencies: 4
# Priority: medium
# Description: Maintain a library of previously opened sessions for quick recall.
# Details:
Use IndexedDB to store the metadata (`SessionMeta`) and a reference for each opened session. Provide a UI to list and reopen sessions from this library.

# Test Strategy:
Open several sessions. Close and reopen the application. Verify the sessions are listed in the library and can be reopened.

# Subtasks:
## 1. Select IndexedDB wrapper [pending]
### Dependencies: None
### Description: Choose idb or similar promise-based wrapper and add dependency.
### Details:


## 2. Define DB schema + migration [pending]
### Dependencies: 17.1
### Description: Plan object stores (sessions, metadata) and implement versioned init/migrations.
### Details:


## 3. Data service API [pending]
### Dependencies: 17.2
### Description: Implement addSession, getAllSessions, getSession(id) with error handling.
### Details:


## 4. Integrate on parse success [pending]
### Dependencies: 17.3
### Description: Call addSession when a file parses successfully to persist metadata.
### Details:


## 5. Sessions list UI [pending]
### Dependencies: 17.3
### Description: Build component to list stored sessions and reopen them.
### Details:


## 6. Graceful error handling [pending]
### Dependencies: 17.3
### Description: Handle quota, blocked storage, and schema errors gracefully.
### Details:


## 7. Bookmarks store schema + migration [pending]
### Dependencies: None
### Description: Extend IndexedDB schema to store bookmarks keyed by sessionId and eventKey; add migration from localStorage.
### Details:


## 8. Hydrate bookmarks on load [pending]
### Dependencies: None
### Description: When opening a session from the library, hydrate bookmark state from IndexedDB and reflect counts/UI.
### Details:


